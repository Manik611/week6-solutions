#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX 1000

typedef struct {
    char arr[MAX];
    int front, rear;
} Queue;

void initQueue(Queue* q) {
    q->front = 0;
    q->rear = -1;
}

int isEmpty(Queue* q) {
    return q->front > q->rear;
}

void enqueue(Queue* q, char c) {
    q->arr[++q->rear] = c;
}

char dequeue(Queue* q) {
    if (isEmpty(q)) return '\0';
    return q->arr[q->front++];
}

char front(Queue* q) {
    if (isEmpty(q)) return '\0';
    return q->arr[q->front];
}

void firstNonRepeatingChar(char* s) {
    int freq[26] = {0};
    Queue q;
    initQueue(&q);

    int n = strlen(s);
    for (int i = 0; i < n; i++) {
        char c = s[i];
        freq[c - 'a']++;
        enqueue(&q, c);

        while (!isEmpty(&q) && freq[front(&q) - 'a'] > 1) {
            dequeue(&q);
        }

        if (isEmpty(&q)) printf("#");
        else printf("%c", front(&q));
    }
    printf("\n");
}

int main() {
    char s[] = "aabc";
    firstNonRepeatingChar(s);

    return 0;
}
